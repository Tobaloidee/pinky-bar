AM_CFLAGS = {amCF} \
  -I/usr/local/include $(LIBNL_CF) $(PERL_CF) $(PYTHON_CF) $(RUBY_CF) $(R_CF) $(OCAML_CF)

bin_PROGRAMS = pinkybar

pinkybar_LDADD = $(X_LIBS) $(ALSA_LIBS) $(MPD_LIBS) $(PCI_LIBS) $(DVD_LIBS) $(SENSORS_LIBS) $(CURL_LIBS) $(LIBNL_LZ) $(PERL_LZ) $(LUA_LIBS) $(PYTHON_LZ) $(RUBY_LZ) $(R_LZ) $(ECL_LIBS) $(OCAML_LZ) $(RUST_LIBS) $(GO_LIBS) $(SLANG_LIBS) $(TCL_LIBS) $(SQLITE_LIBS) {bzdlibs}
pinkybar_SOURCES = main.c           \
    common.c                        \
    cpu.c                           \
    curl.c                          \
    sound.c                         \
    options.c                       \
    net.c                           \
    weather.c                       \
    smart.c                         \
    c++.cpp                         \
    extend.c                        \
    x11.c                           \
    mail.c                          \
    sqlite.c                        \
    packages.c                      \
    prototypes/common.h             \
    prototypes/packages.h           \
    prototypes/sqlite.h             \
    prototypes/mail.h               \
    prototypes/curl.h               \
    prototypes/x11.h                \
    prototypes/cpu.h                \
    prototypes/sound.h              \
    prototypes/net.h                \
    prototypes/functions.h          \
    prototypes/options.h            \
    prototypes/weather.h            \
    prototypes/smart.h              \
    prototypes/cpp.hpp              \
    prototypes/extend.h             \
    include/headers.h               \
    include/options_constants.h     \
    include/functions_constants.h   \
    include/colours/dzen2_colours.h \
    include/colours/awesomewm_colours.h \
    include/colours/ncurses_colours.h \
    include/colours/py3status_colours.h \
    include/colours/xmobar_colours.h \
    include/colours/x11_colours.h   \
    include/options_generator.h     \
    {srcFiles}

.ml.o:
	ocamlc -output-obj $< -o $@

pinky.a:
	rustc --crate-type=staticlib ../extra/scripts/pinky.rs -o pinky.a

pinky2.a:
	go build -buildmode=c-archive ../extra/scripts/pinky2.go
